.node--timeline {
  --milestone-edge-color: #bababa;
  --bullet-size: 18px;

  .cu-header {
    border: none;
    margin-bottom: var(--cu-vr0);

    @include breakpoint(md) {
      margin-bottom: var(--cu-vr3);
    }
  }

  .article--timeline {
    a:not(.cu-button) {
      font-family: inherit;
      font-weight: inherit;
      font-size: inherit;
      line-height: inherit;
      color: var(--cu-color-brand);
    }
  }

  .cu-banner.cu-banner--timeline {
    --cu-text-color: #222;
    background:
      linear-gradient(var(--milestone-edge-color) 0 0) top left / 40% 12px,
      linear-gradient(var(--milestone-edge-color) 0 0) left / 12px 100%,
      linear-gradient(var(--milestone-edge-color) 0 0) bottom left / 100% 12px,   transparent;
    background-repeat: no-repeat;
    padding: var(--cu-vr2) var(--cu-ps1);
    margin: 0 var(--cu-ps-2);

    @include breakpoint(md) {
      padding: var(--cu-vr4) 0 var(--cu-vr2) var(--cu-ps3);
      margin: 0;
      display: grid;
      grid-template-columns: 36% 1fr;
      gap: var(--cu-vr1) var(--cu-ps2);
    }

    .cu-heading {
      --cu-font-size: var(--cu-ms10);
      --cu-font-weight: 900;
    }

    .banner__content {
      display: block;
      border: none;
      padding-right: 0;
    }

    .cu-banner__media {
      position: relative;
      grid-row: 1 / -1;
      grid-column: 2;

      @include breakpoint(md) {
        margin-top: calc(var(--cu-vr4) * -1 + -50px);
      }

      &::before {
        display: none;
      }

      img {
        height: auto;
        object-fit: initial;
      }
    }
  }

  .cu-component--milestone-section {
    @include breakpoint(md) {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 4px;

      .field--field-components {
        display: contents;
      }
    }
  }

  .cu-component--milestone,
  .cu-component--milestone.cu-gallery:not([class*="cu-colorscheme--"]) {
    --cu-component-margin-bottom: 0;
    --cu-component-padding-top: var(--cu-vr0);
    --cu-component-padding-bottom: var(--cu-vr3);
    --cu-component-padding-left: var(--cu-ps1);
    --cu-component-padding-right: 0;
    --cu-font-size: var(--cu-ms-1);
    position: relative;
    grid-column: 2;
    box-shadow: -2px -2px 0px 0px var(--milestone-edge-color);
    padding: var(--cu-component-padding-top) var(--cu-component-padding-right) var(--cu-component-padding-bottom) var(--cu-component-padding-left);
    min-height: 200px;

    @include breakpoint(md) {
      --cu-component-padding-bottom: 0;
    }

    p {
      --cu-component-padding-top: 0;
      --cu-component-padding-right: 0;
      --cu-component-padding-bottom: 0;
      --cu-component-padding-left: 0;
      line-height: 1.3;
      font-weight: 400;
      padding: var(--cu-component-padding-top) var(--cu-component-padding-right) var(--cu-component-padding-bottom) var(--cu-component-padding-left);

      &:last-of-type {
        margin-bottom: initial;
      }
    }

    .shout {
      font-family: "freight-text-pro", serif;
      line-height: 1;
      font-size: var(--cu-ms7);
    }

    @include breakpoint(sm) {
      &:has(.cu-media.align-left),
      &:has(.cu-media.align-right) {
        --cu-component-padding-top: var(--cu-vr0);
        display: grid;
        grid-template-columns: 1fr 1fr;

        > * {
          --cu-component-padding-right: var(--cu-ps0);
          --cu-component-padding-left: var(--cu-ps0);
          grid-column: 2;
        }

        .cu-media {
          grid-column: 1;
          grid-row: 1/5; // Set explicit rows that are enough to accommodate content.
          width: 100%;
        }
      }
    }

    &:has(.cu-media.align-right) {
      > * {
        grid-column: 1;
      }

      .cu-media {
        grid-column: 2;
        margin-left: 0;
      }
    }
  }

  :nth-child(even of .cu-component--milestone) {
    @include breakpoint(md) {
      --cu-component-padding-left: 0;
      --cu-component-padding-right: var(--cu-ps1);
      grid-column: 1/-1;
      width: 50%;
      box-shadow: 2px -2px 0px 0px var(--milestone-edge-color);
      border-left: none;
    }
  }

  .cu-component--milestone .cu-media {
    margin-bottom: var(--cu-vr1);
  }

  .cu-component--milestone figure.cu-media .cu-media {
    margin-bottom: 0;
  }

  .cu-component--milestone .cu-media.align-left,
  .cu-component--milestone .cu-media.align-right {
    display: flex;
    align-content: stretch;
    margin-bottom: var(--cu-vr0);

    @include breakpoint(sm) {
      margin-bottom: 0;
      + p:first-of-type {
        --cu-component-padding-top: var(--cu-ps0);
      }
    }

    // Ensure the image uses the whole height.
    .cu-image,
    .field-type--image {
      height: 100%;
      width: 100%;
      align-self: stretch;
      justify-self: stretch;
    }
  }

  // DOTS
  // All milestones have a solid, top dot. Only the last milestone in a section has a bottom dot.
  .cu-component--milestone::before,
  :nth-last-child(1 of .cu-component--milestone)::after {
    content: '';
    position: absolute;
    top: calc(var(--bullet-size) / 2 * -1 - 1px);
    left: calc(var(--bullet-size) / 2 * -1 - 1px);
    display: block;
    width: var(--bullet-size);
    height: var(--bullet-size);
    border-radius: 50%;
    background-color: var(--milestone-edge-color);
  }

  // Dots on even milestones are placed on the opposite side.
  :nth-child(even of .cu-component--milestone)::before,
  :nth-child(even of .cu-component--milestone):nth-last-child(1 of .cu-component--milestone)::after {
    @include breakpoint(md) {
      right: calc(var(--bullet-size) / 2 * -1 - 1px);
      left: auto;
    }
  }

  // Make the bottom dot white with a border and put it at the bottom.
  :nth-last-child(1 of .cu-component--milestone)::after {
    top: auto;
    bottom: calc(var(--bullet-size) / 2 * -1 + 1px);
    background-color: white;
    box-shadow: 0px 0px 0px 2px var(--milestone-edge-color);
  }

  .cu-component[class^="cu-colorscheme--"] {
    background-clip: content-box;

    p {
      --cu-component-padding-right: var(--cu-ps1);
      --cu-component-padding-left: var(--cu-ps1);
    }
  }

  .cu-component.cu-component--gallery {
    width: unset;
    left: unset;
    right: unset;
    margin-left: unset;
    margin-right: unset;

    .cu-gallery__item--blank {
      opacity: .1;
    }

    .cu-gallery__item.obscured {
      opacity: .1;
    }

    .cu-gallery__navigation {
      top: 35%;
      border-radius: 25px;
      border: 2px solid var(--milestone-edge-color);
      background-color: rgba(0,0,0,.75);
    }

    .cu-gallery__navigation-prev {
      background-image: url("data:image/svg+xml,%3Csvg width='37' height='37' fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' version='1.1' viewBox='0 0 37 37' xml:space='preserve' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cpath d='M21.5 24.5l-6-6 6-6' /%3E%3C/svg%3E");
    }

    .cu-gallery__navigation-next {
      background-image: url("data:image/svg+xml,%3Csvg width='37' height='37' fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' version='1.1' viewBox='0 0 37 37' xml:space='preserve' xmlns='http://www.w3.org/2000/svg' xmlns:svg='http://www.w3.org/2000/svg'%3E%3Cpath d='m15.5,24.5 6,-6 -6,-6' /%3E%3C/svg%3E");
    }
  }
}

.cu-component--milestone-section {
  margin: var(--cu-vr4) auto var(--cu-vr2);

  .field--field-heading + .cu-image {
    grid-column: 1/-1;
    justify-self: center;
    margin-bottom: var(--cu-vr3);
  }

  .milestone-section__meta {
    position: relative;
    padding-bottom: var(--cu-vr2);
    --cu-line-height: 1.1;

    @include breakpoint(md) {
      padding-right: var(--cu-ps1);

      &:has(.field--field-body) {
        grid-column: 1/-1;
        width: 50%;
        box-shadow: 2px 0 0px 0px var(--milestone-edge-color);

        &::before {
          content: '';
          position: absolute;
          top: calc(var(--bullet-size) / 2 * -1 - 1px);
          right: calc(var(--bullet-size) / 2 * -1 - 1px);
          display: block;
          width: var(--bullet-size);
          height: var(--bullet-size);
          border-radius: 50%;
          background-color: var(--milestone-edge-color);
        }
      }
    }

  }

  .field--field-subheading {
    color: var(--cu-color-brand);
    --cu-font-size: var(--cu-ms9);
    --cu-font-weight: 400;
    font-style: italic;
    padding-bottom: var(--cu-vr0);
  }

  .field--field-body {
    font-family: "freight-text-pro", serif;
    --cu-font-weight: 300;
    --cu-font-size: var(--cu-ms7);
    line-height: 1.1;
    grid-column: 1;

    p:last-child {
      margin-bottom: 0;
      padding-bottom: var(--cu-vr0);
    }
  }

}
