<?php

use Drupal\Core\Link;

/**
 * @file Theme file for the union_marketing.theme.
 */

/**
 * Implements hook_preprocess_page().
 */
function union_marketing_preprocess_page(array &$variables) {
  if (getenv('LIVERELOAD')) {
    $variables['#attached']['library'][] = 'union_marketing/livereload';
  }
}

/**
 * Implements template_preprocess_html().
 */
function union_marketing_preprocess_html(&$variables) {
  if (isset($variables['node_type'])) {
    // Add node-TYPE class to the <body> element.
    $variables['attributes']['class'][] = 'node--' . $variables['node_type'];
  }
}

/**
 * Implements template_preporcess_views_view__VIEW_ID().
 *
 * Sets the row content for the view template.
 * @see views-view--courses-by-topic.html.twig
 */
function union_marketing_preprocess_views_view__courses_by_topic(&$variables) {
  $rows = $variables['rows'];
  foreach ($rows as $id => $row) {
    $variables['rows'][$id] = [];
    $variables['rows'][$id]['content'] = $row;
  }
}

/**
 * Implements template_preprocess_media_oembed_iframe().
 *
 * Create a new `media_processed` variable that fixes some accessibility issues
 * with oembed markup.
 */
function union_marketing_preprocess_media_oembed_iframe(&$variables) {
  $variables['media_processed']  = '';
  $document = new \DOMDocument('1.0', 'UTF-8');
  $internalErrors = libxml_use_internal_errors(true); // Disable XML errors;
  $document->loadHTML($variables['media']);
  libxml_use_internal_errors($internalErrors); // Restore XML error settings;

  // Fix iframes, specifically those from youtube.
  foreach ($document->getElementsByTagName('iframe') as $iframe) {
    // If there is no title on the iframe, add a generic one.
    if ($iframe->hasAttribute('title') === FALSE) {
      $parsed_url = parse_url($iframe->getAttribute('src'));
      $iframe->setAttribute('title', 'Embedded media from ' . $parsed_url['host']);
    }

    // Remove the frameborder attribute if it exists.
    if ($iframe->hasAttribute('frameborder')) {
      $iframe->removeAttribute('frameborder');
    }

    // Add an inline border style, since we just removed the frameborder.
    if ($iframe->hasAttribute('style')) {
      $iframe->setAttribute('style', $iframe->getAttribute('style') . ' border: 0;');
    }
    else {
      $iframe->setAttribute('style', 'border: 0;');
    }
  }

  $body_node = $document->getElementsByTagName('body')->item(0);
  $comment_node = $document->createComment('Processed by union_marketing_preprocess_media_oembed_iframe():');
  $body_node->insertBefore($comment_node, $body_node->firstChild);

  foreach ($body_node->childNodes as $node) {
    $variables['media_processed'] .= $document->saveHTML($node);
  }
}

/**
 * Implements hook_library_info_alter().
 */
function union_marketing_library_info_alter(&$libraries, $extension) {
  // Add the Union forms component library to webforms.
  if ($extension === 'webform' && isset($libraries['webform.form'])) {
    $libraries['webform.form']['dependencies'][] = 'union_organizer/form';
  }
}

/**
 * Implements hook_preprocess_persona().
 *
 * Change links of some fields to modals.
 */
function union_marketing_preprocess_persona(&$variables) {
  foreach (['display_name', 'field_photo'] as $field) {
    if (!empty($variables['content'][$field][0]['#url'])) {
      $variables['content'][$field][0]['#attached'] = [
        'library' => ['core/drupal.dialogue.ajax']
      ];

      $variables['content'][$field][0]['#url']->setOption('attributes', [
        'class' => ['use-ajax'],
        'data-dialog-type' => 'modal',
      ]);
    }
  }
}

/**
 * Implements template_preprocess_paragraph().
 *
 * Check if the paragraph is being rendered within a node. If so, tell
 * the template to add a section.
 */
function union_marketing_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $parent = $paragraph->getParentEntity();
  if ($parent && $parent->getEntityTypeId() === 'node') {
    $variables['render_section'] = TRUE;
  }
}
