<?php

use Drupal\Core\Link;
use Drupal\entity_reference_layout\EntityReferenceLayoutRevisionsFieldItemList;
use Drupal\crop\Entity\Crop;

/**
 * @file Theme file for the union_marketing.theme.
 */

/**
 * Implements hook_preprocess_page().
 */
function union_marketing_preprocess_page(array &$variables) {
  if (getenv('LIVERELOAD')) {
    $variables['#attached']['library'][] = 'union_marketing/livereload';
  }
}

/**
 * Implements template_preprocess_html().
 */
function union_marketing_preprocess_html(&$variables) {
  if (isset($variables['node_type'])) {
    // Add node-TYPE class to the <body> element.
    $variables['attributes']['class'][] = 'node--' . $variables['node_type'];
  }
}

/**
 * Implements template_preporcess_views_view__VIEW_ID().
 *
 * Sets the row content for the view template.
 * @see views-view--courses-by-topic.html.twig
 */
function union_marketing_preprocess_views_view__courses_by_topic(&$variables) {
  $rows = $variables['rows'];
  foreach ($rows as $id => $row) {
    $variables['rows'][$id] = [];
    $variables['rows'][$id]['content'] = $row;
  }
}

/**
 * Implements template_preprocess_media_oembed_iframe().
 *
 * Create a new `media_processed` variable that fixes some accessibility issues
 * with oembed markup.
 */
function union_marketing_preprocess_media_oembed_iframe(&$variables) {
  $variables['media_processed']  = '';
  $document = new \DOMDocument('1.0', 'UTF-8');
  $internalErrors = libxml_use_internal_errors(true); // Disable XML errors;
  $document->loadHTML($variables['media']);
  libxml_use_internal_errors($internalErrors); // Restore XML error settings;

  // Fix iframes, specifically those from youtube.
  foreach ($document->getElementsByTagName('iframe') as $iframe) {
    // If there is no title on the iframe, add a generic one.
    if ($iframe->hasAttribute('title') === FALSE) {
      $parsed_url = parse_url($iframe->getAttribute('src'));
      $iframe->setAttribute('title', 'Embedded media from ' . $parsed_url['host']);
    }

    // Remove the frameborder attribute if it exists.
    if ($iframe->hasAttribute('frameborder')) {
      $iframe->removeAttribute('frameborder');
    }

    // Add an inline border style, since we just removed the frameborder.
    if ($iframe->hasAttribute('style')) {
      $iframe->setAttribute('style', $iframe->getAttribute('style') . ' border: 0;');
    }
    else {
      $iframe->setAttribute('style', 'border: 0;');
    }
  }

  $body_node = $document->getElementsByTagName('body')->item(0);
  $comment_node = $document->createComment('Processed by union_marketing_preprocess_media_oembed_iframe():');
  $body_node->insertBefore($comment_node, $body_node->firstChild);

  foreach ($body_node->childNodes as $node) {
    $variables['media_processed'] .= $document->saveHTML($node);
  }
}

/**
 * Implements hook_library_info_alter().
 */
function union_marketing_library_info_alter(&$libraries, $extension) {
  // Add the Union forms component library to webforms.
  if ($extension === 'webform' && isset($libraries['webform.form'])) {
    $libraries['webform.form']['dependencies'][] = 'union_organizer/form';
  }
}

/**
 * Implements hook_preprocess_persona().
 *
 * Change links of some fields to modals.
 */
function union_marketing_preprocess_persona(&$variables) {
  foreach (['display_name', 'field_photo'] as $field) {
    if (!empty($variables['content'][$field][0]['#url'])) {
      $variables['content'][$field][0]['#attached'] = [
        'library' => ['core/drupal.dialogue.ajax']
      ];

      $variables['content'][$field][0]['#url']->setOption('attributes', [
        'class' => ['use-ajax'],
        'data-dialog-type' => 'modal',
      ]);
    }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function union_marketing_preprocess_paragraph__deck(&$variables) {
  $grid_variant = ($variables['paragraph']->hasField('field_grid_variant')) ? $variables['paragraph']->field_grid_variant->value : 'two-up';

  $variables['attributes']['class'][] = 'cu-grid--' . $grid_variant;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * Set grids column count on curated post listings (defaults to 3, 4 on story
 * nodes).
 */
function union_marketing_preprocess_paragraph__curated_post_listing(&$variables) {
  if ($variables['paragraph']->getParentEntity()->bundle() !== 'section') {
    return;
  }

  if ($variables['paragraph']->getParentEntity()->getParentEntity()) {
    $variables['attributes']['class'][] = ($variables['paragraph']->getParentEntity()->getParentEntity()->bundle() === 'story')
      ? 'cu-grid--4col'
      : 'cu-grid--3col';
  }
}

/**
 * Implements hook_preprocess_field().
 */
function union_marketing_preprocess_field__paragraph__field_heading__promo(&$variables) {
  $variables['attributes']['class'][] = 'cu-heading';
  $variables['attributes']['class'][] = 'cu-text--xxxl';
}

/**
 * Implements hook_preprocess_field().
 */
function union_marketing_preprocess_field__paragraph__field_subheading__promo(&$variables) {
  $variables['attributes']['class'][] = 'cu-heading';
}

/**
 * Implements hook_preprocess_field().
 */
function union_marketing_preprocess_field__node__field_representative_img_caption(&$variables) {
  $variables['attributes']['id'][] = 'media__caption-' . $variables['element']['#object']->id();
}

/**
 * Implements hook_preprocess_field().
 */
function union_marketing_preprocess_field__field_representative_image(&$variables) {
  if (!isset($variables['element']['#object'])) {
    return;
  }

  $entity = $variables['element']['#object'];
  $variables['attributes']['role'][] = 'figure';

  if ($entity->hasField('field_representative_img_caption') && !$entity->field_representative_img_caption->isEmpty()) {
    $variables['attributes']['aria-labelledby'][] = 'media__caption-' . $entity->id();
  }

  if (!$entity->field_representative_image->isEmpty()) {
    $image = $entity->field_representative_image->entity->field_media_image;
    $crop_type = \Drupal::config('focal_point.settings')->get('crop_type');
    $crop = Crop::findCrop($image->entity->getFileUri(), $crop_type);

    if ($crop) {
      $image_props = $image->first()->getValue();
      $anchor = \Drupal::service('focal_point.manager')
        ->absoluteToRelative($crop->x->value, $crop->y->value, $image_props['width'], $image_props['height']);

      if ($anchor['y'] <= 33) {
        $variables['attributes']['class'][] = 'media--position-top';
      }
      elseif ($anchor['y'] >= 66) {
        $variables['attributes']['class'][] = 'media--position-bottom';
      }
    }
  }
}

/**
 * Implements hook_preprocess_collection().
 *
 * Modify the template theme suggestions when blog collections are rendered as
 * banners through layout builder. This allows us to modify the heading level.
 */
function union_marketing_preprocess_collection__blog__banner(&$variables) {
  $elements = &$variables['content']['_layout_builder'][0]['banner'];
  foreach ($elements as &$render_array) {
    if (isset($render_array["#plugin_id"]) && $render_array["#plugin_id"] == "field_block:collection:blog:name") {
      $render_array['#theme'] = 'block__blog_collection__banner__name';
    }
  }
}

/**
 * Implements hook_preprocess_block().
 *
 * Until we can find a better way, this allows us to pass the nid to the
 * template for the read more link.
 *
 * @todo Refactor this as soon as we have time.
 */
function union_marketing_preprocess_block__extra_field_block__node__story__links(&$variables) {
  if (isset($variables['content']['#lazy_builder'][1][0]) && $variables['content']['#lazy_builder'][1][1] === 'banner') {
    $variables['nid'] = $variables['content']['#lazy_builder'][1][0];
  }
}
