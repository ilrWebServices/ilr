<?php

use Drupal\collection_content_permissions\Hook\CollectionContentPermissionsHooks;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Hook\Attribute\LegacyHook;

/**
 * @file
 * Contains collection_content_permissions.module.
 */

/**
 * Implements hook_entity_field_access_alter().
 */
#[LegacyHook]
function collection_content_permissions_entity_field_access_alter(array &$grants, array $context) {
  \Drupal::service(CollectionContentPermissionsHooks::class)->canonicalStatusFieldAccess($grants, $context);
}

/**
 * Implements hook_entity_access().
 *
 * Allow view access to unpublished content collected canonically in collections
 * this account can edit (if the account has permission).
 *
 * Allow edit access to content collected canonically in collections this
 * account can edit (if the account has permission).
 */
#[LegacyHook]
function collection_content_permissions_entity_access(EntityInterface $entity, $op, AccountInterface $account) {
  $unpub_access_result = \Drupal::service(CollectionContentPermissionsHooks::class)->canonicalUnpublishedViewAccess($entity, $op, $account);
  $edit_access_result = \Drupal::service(CollectionContentPermissionsHooks::class)->canonicalEditAccess($entity, $op, $account);
  $restricted_collection_access_result = \Drupal::service(CollectionContentPermissionsHooks::class)->restrictedCollectionViewAccess($entity, $op, $account);
  return $unpub_access_result->orIf($edit_access_result)->orIf($restricted_collection_access_result);
}
