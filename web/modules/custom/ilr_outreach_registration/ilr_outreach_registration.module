<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;

/**
 * Implements hook_webform_options_WEBFORM_OPTIONS_ID_alter().
 */
function ilr_outreach_registration_webform_options_certified_organizations_alter(array &$options, array &$element) {
  $cid = 'ilr_outreach_registration_certified_organizations';

  if ($cache = \Drupal::cache()->get($cid)) {
    $options = $cache->data;
    return;
  }

  try {
    /** @var \Drupal\salesforce\Rest\RestClientInterface $sfapi */
    $sfapi = \Drupal::service('salesforce.client');

    $query = new \Drupal\salesforce\SelectQuery('Account');
    $query->fields = [
      'Id',
      'Name',
    ];
    $query->addCondition('Certified_Account_Name__c', 'TRUE');

    $sf_results = $sfapi->query($query);
  }
  catch (\Exception $e) {
    \Drupal::logger('ilr_outreach_registration')->error($e->getMessage());

    // Cache empty options for an hour to prevent excessive calls to the
    // Salesforce API and to aid in troubleshooting.
    \Drupal::cache()->set($cid, [], time() + 60 * 60);
    return;
  }

  foreach ($sf_results->records() as $record) {
    $name = $record->field('Name');
    $options[$name] = $name;
  }

  // Cache these options for 24 hours.
  \Drupal::cache()->set($cid, $options, time() + 60 * 60 * 24);
}

/**
 * Implements hook_webform_options_alter().
 *
 * @todo This could become a custom webform element instead.
 *
 * @deprecated This has been replaced with a hidden text field, but left for
 * allowed values reference.
 */
function ilr_outreach_registration_webform_options_alter(array &$options, array &$element, $options_id = NULL) {
  if (empty($element['#webform_key'])) {
    return;
  }

  $request = \Drupal::request();
  /** @var \Drupal\Core\Http\InputBag $query */
  $query = $request->query;

  if ($element['#webform_key'] === 'outreach_areas_of_interest') {
    $url_values = $query->get('interests') ?? [];
    $allowed_values = [
      'Conflict Resolution',
      'Customized Program',
      'Disability and Employment',
      'Diversity and Inclusion',
      'Employee Relations',
      'Employment Law',
      'HR Leadership for Organizational Excellence',
      'Human Resources',
      'Labor Relations',
      'Leadership Development and Organizational Change',
      'Modern Chief Diversity Officer',
      'Modern CHRO Role Program',
      'Senior Leader Programs',
      'Strategic HR Business Partnering Program',
      'Union Leadership',
      'Workplace Health and Safety',
    ];
  }
  elseif ($element['#webform_key'] === 'outreach_marketing_personas') {
    $url_values = $query->get('personas') ?? [];
    $allowed_values = [
      'ADRHUB',
      'Advisory Council',
      'Alumni',
      'Arbitrators Development Program',
      'Board Member',
      'BSILR',
      'Buffalo Co-Lab',
      'CAHRS hrSpectrum eNews',
      'CAHRS Quarterly',
      'CAHRS Top 10 News',
      'CJI',
      'CJI Media List',
      'CJI Summit Attendee',
      'CJI Summit Registrant',
      'eCornell',
      'EMHRM',
      'Environmental Organization',
      'Equity in Focus 2022',
      'Faculty',
      'Funder',
      'ICS Research Fellows',
      'ILR News Updates',
      'Institute for Compensation Studies',
      'Ithaca Co-Lab',
      'Labor and Employment Law Program',
      'Labor Leaders',
      'LDI-CRRESS',
      'Media',
      'MILR',
      'MPSNYC',
      'New Conversations Project',
      'Newsletter',
      'NLLI',
      'Pay Transparency Event',
      'Policymaker',
      'Scheinman Board Member',
      'Scheinman Institute',
      'Scheinman Institute Member',
      'Scheinman Newsletter',
      'Staff',
      'Student',
      'Transatlantic Social Dialogue',
      'ULI',
      'Union',
      'Webinar Attendee',
      'WI Mailing List',
      'Work and Coronavirus Updates',
      'Worker Institute',
    ];
  }
  else {
    return;
  }

  $available_options = array_intersect($url_values, $allowed_values);

  if (empty($available_options)) {
    // @todo Only hide this on embedded forms.
    return;
  }

  $options = array_combine($available_options, $available_options);
}

/**
 * Implements hook_entity_operation().
 */
function ilr_outreach_registration_entity_operation(EntityInterface $entity) {
  $operations = [];

  if ($entity->getEntityTypeId() === 'webform_submission') {
    /** @var \Drupal\webform\WebformSubmissionInterface $entity */

    $webform = $entity->getWebform();

    // See if the webform for this submission uses the
    // outreach_registration_submitter handler.
    $outreach_registration_submitter_handler_collection = $webform->getHandlers('outreach_registration_submitter');

    if ($outreach_registration_submitter_handler_collection->count() > 0) {
      $operations['ilr_outreach_registration_resubmit'] = [
        'title' => t('Send to Salesforce'),
        'url' => Url::fromRoute('ilr_outreach_registration.event_registration_submit', [
          'webform' =>  $webform->id(),
          'webform_submission' =>  $entity->id(),
        ]),
        'weight' => 50,
      ];
    }
  }

  return $operations;
}
