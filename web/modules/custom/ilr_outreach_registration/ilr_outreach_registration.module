<?php

use Drupal\salesforce\SelectQuery;

/**
 * Implements hook_webform_options_WEBFORM_OPTIONS_ID_alter().
 */
function ilr_outreach_registration_webform_options_certified_organizations_alter(array &$options, array &$element) {
  $cid = 'ilr_outreach_registration_certified_organizations';

  if ($cache = \Drupal::cache()->get($cid)) {
    $options = $cache->data;
    return;
  }

  try {
    /** @var \Drupal\salesforce\Rest\RestClientInterface $sfapi */
    $sfapi = \Drupal::service('salesforce.client');

    // TODO: Use $query->limit and $query->offset to load in batches. The REST API has a row limit of 2000 and there are more companies than that.
    $query = new SelectQuery('Account');
    $query->fields = [
      'Id',
      'Name',
    ];
    $query->addCondition('Certified_Account_Name__c', 'TRUE');

    $sf_results = $sfapi->query($query);
  }
  catch (\Exception $e) {
    \Drupal::logger('ilr_outreach_registration')->error($e->getMessage());

    // Cache empty options for an hour to prevent excessive calls to the
    // Salesforce API and to aid in troubleshooting.
    \Drupal::cache()->set($cid, [], time() + 60 * 60);
    return;
  }

  foreach ($sf_results->records() as $record) {
    $name = $record->field('Name');
    $options[$name] = $name;
  }

  // Cache these options for 24 hours.
  \Drupal::cache()->set($cid, $options, time() + 60 * 60 * 24);
}

/**
 * Implements hook_webform_options_WEBFORM_OPTIONS_ID_alter().
 */
function ilr_outreach_registration_webform_options_cahrs_companies_alter(array &$options, array &$element) {
  $cid = 'ilr_outreach_registration_cahrs_companies';

  if ($cache = \Drupal::cache()->get($cid)) {
    $options = $cache->data;
    return;
  }

  try {
    /** @var \Drupal\salesforce\Rest\RestClientInterface $sfapi */
    $sfapi = \Drupal::service('salesforce.client');

    $query = new SelectQuery('Account');
    $query->fields = [
      'Id',
      'Name',
    ];
    $query->addCondition('Partnerships__c', "('CAHRS Member')", 'includes');
    $query->addCondition('CAHRS_Top_of_Account_Hierarchy__c', 'True');

    $sf_results = $sfapi->query($query);
  }
  catch (\Exception $e) {
    \Drupal::logger('ilr_outreach_registration')->error($e->getMessage());

    // Cache empty options for an hour to prevent excessive calls to the
    // Salesforce API and to aid in troubleshooting.
    \Drupal::cache()->set($cid, [], time() + 60 * 60);
    return;
  }

  foreach ($sf_results->records() as $record) {
    $name = $record->field('Name');
    $id = $record->id()->__toString();
    $options[$id] = $name;
  }

  // Cache these options for 24 hours.
  \Drupal::cache()->set($cid, $options, time() + 60 * 60 * 24);
}

/**
 * Implements hook_webform_options_WEBFORM_OPTIONS_ID_alter().
 */
function ilr_outreach_registration_webform_options_touchpoint_emps_alter(array &$options, array &$element) {
  $cid = 'ilr_outreach_registration_touchpoint_emps';

  if ($cache = \Drupal::cache()->get($cid)) {
    $options = $cache->data;
    return;
  }

  // Get the Touchpoint_EMPS__c picklist values from the UI API like a boss.
  // @see
  // https://developer.salesforce.com/docs/atlas.en-us.244.0.uiapi.meta/uiapi/ui_api_resources_picklist_values.htm
  try {
    /** @var \Drupal\salesforce\Rest\RestClientInterface $sfapi */
    $sfapi = \Drupal::service('salesforce.client');

    $sf_results = $sfapi->apiCall('ui-api/object-info/Touchpoint__c/picklist-values/012000000000000AAA/Touchpoint_EMPS__c');

    foreach ($sf_results['values'] as $value) {
      $options[$value['value']] = $value['label'];
    }
  }
  catch (\Exception $e) {
    \Drupal::logger('ilr_outreach_registration')->error($e->getMessage());

    // Cache empty options for an hour to prevent excessive calls to the
    // Salesforce API and to aid in troubleshooting.
    \Drupal::cache()->set($cid, [], time() + 60 * 60);
    return;
  }

  // Cache these options for 24 hours.
  \Drupal::cache()->set($cid, $options, time() + 60 * 60 * 24);
}

/**
 * Implements hook_webform_options_alter().
 *
 * @todo This could become a custom webform element instead.
 *
 * @deprecated This has been replaced with a hidden text field, but left for
 * allowed values reference.
 */
function ilr_outreach_registration_webform_options_alter(array &$options, array &$element, $options_id = NULL) {
  if (empty($element['#webform_key'])) {
    return;
  }

  $request = \Drupal::request();
  /** @var \Drupal\Core\Http\InputBag $query */
  $query = $request->query;

  if ($element['#webform_key'] === 'outreach_areas_of_interest') {
    $url_values = $query->get('interests') ?? [];
    $allowed_values = [
      'Conflict Resolution',
      'Customized Program',
      'Disability and Employment',
      'Diversity and Inclusion',
      'Employee Relations',
      'Employment Law',
      'HR Leadership for Organizational Excellence',
      'Human Resources',
      'Labor Relations',
      'Leadership Development and Organizational Change',
      'Modern Chief Diversity Officer',
      'Modern CHRO Role Program',
      'Senior Leader Programs',
      'Strategic HR Business Partnering Program',
      'Union Leadership',
      'Workplace Health and Safety',
    ];
  }
  else {
    return;
  }

  $available_options = array_intersect($url_values, $allowed_values);

  if (empty($available_options)) {
    // @todo Only hide this on embedded forms.
    return;
  }

  $options = array_combine($available_options, $available_options);
}
