<?php

/**
 * @file
 * Contains person.module.
 */

use Drupal\Core\EventSubscriber\MainContentViewSubscriber;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\Element;

/**
 * Implements hook_help().
 */
function person_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the person module.
    case 'help.page.person':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows creation and management non-user people and their personas.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 *
 * Provides a theme definition for persona entities.
 */
function person_theme($existing, $type, $theme, $path) {
  $theme = [
    'persona' => [
      'path' => $path . '/templates',
      'template'  => 'persona',
      'render element' => 'elements',
    ],
    'persona_edit_form' => [
      'render element' => 'form',
    ],
    'persona_name_list' => [
      'variables' => [
        'names' => [],
      ]
    ],
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function person_theme_suggestions_persona(array $variables) {
  $suggestions = [];
  $persona = $variables['elements']['#persona'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'persona__' . $sanitized_view_mode;
  $suggestions[] = 'persona__' . $persona->bundle();
  $suggestions[] = 'persona__' . $persona->bundle() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Prepares variables for templates.
 */
function template_preprocess_persona(&$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  // Helpful $content variable for templates.
  $variables += ['content' => []];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
  // Add article ARIA role.
  $variables['attributes']['role'] = 'article';
  /** @var \Drupal\person\PersonaInterface $persona */
  $persona = $variables['elements']['#persona'];
  //make the persona available
  $variables['persona'] = $persona;
  //provide the label
  $variables['label'] = $persona->display_name->value;
  //provide the alias if there is an existing persona.
  if ($persona->id()) {
    $variables['url'] = $persona->toUrl()->toString();
  }

  // Add a variable to determine if the current request is for a modal.
  $wrapper_format = \Drupal::request()->query->get(MainContentViewSubscriber::WRAPPER_FORMAT);
  $variables['modal'] = in_array($wrapper_format, ['drupal_ajax', 'drupal_modal', 'drupal_dialog']);
}
