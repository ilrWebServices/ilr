<?php

/**
 * @file
 * Installation and uninstallation functions.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Update classes computed field definition.
 */
function ilr_update_8001() {
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $field_storage_definition = $entity_definition_update_manager->getFieldStorageDefinition('classes', 'node');
  $field_storage_definition->setCustomStorage(TRUE);
  $field_storage_definition->setRevisionable(FALSE);
  $entity_definition_update_manager->updateFieldStorageDefinition($field_storage_definition);
}

/**
 * Update certificates computed field definition.
 */
function ilr_update_8002() {
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  $field_storage_definition = $entity_definition_update_manager->getFieldStorageDefinition('certificates', 'node');
  $field_storage_definition->setCustomStorage(TRUE);
  $field_storage_definition->setRevisionable(FALSE);
  $entity_definition_update_manager->updateFieldStorageDefinition($field_storage_definition);
}

/**
 * Copy node field_sections data to tmp tables.
 */
function ilr_update_8003(&$sandbox) {
  $connection = \Drupal::service('database');

  foreach (['node__field_sections', 'node_revision__field_sections'] as $table) {
    $query = $connection->query("CREATE TABLE {$table}_tmp AS SELECT * FROM {$table}");
  }
}

/**
 * Add the new `sticky` base field to collection_item entities.
 */
function ilr_update_8004() {
  $field_storage_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Sticky at top of lists'))
    ->setInitialValue(FALSE)
    ->setDefaultValue(FALSE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('sticky', 'collection_item', 'collection_item', $field_storage_definition);
}
