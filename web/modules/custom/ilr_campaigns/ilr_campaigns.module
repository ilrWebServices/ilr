<?php

/**
 * @file
 * Contains ilr_campaigns.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_help().
 */
function ilr_campaigns_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ilr_campaigns module.
    case 'help.page.ilr_campaigns':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Manage subscribers and campaigns over the CampaignMonitor API') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function ilr_campaigns_entity_type_alter(array &$entity_types) {
  $links = $entity_types['node']->get('links');
  $links['ilr_campaigns_email'] = '/node/{node}/email';
  $entity_types['node']->set('links', $links);
}

/**
 * Implements hook_ENTITY_insert().
 */
function ilr_campaigns_node_insert(ContentEntityInterface $node) {
  if ($node->bundle() === 'class') {
    \Drupal::queue('new_class_processor')->createItem($node);
  }

  if ($node->bundle() === 'course') {
    \Drupal::state()->set('ilr_campaigns.custom_field_update', 0);
  }
}

/**
 * Implements hook_cron().
 */
function ilr_campaigns_cron() {
  $course_notifications_helper = \Drupal::service('ilr_campaigns.course_notifications');
  $last_field_update = \Drupal::state()->get('ilr_campaigns.custom_field_update', 0);

  if ((\Drupal::time()->getRequestTime() - $last_field_update) > 60 * 60 * 24) {
    if ($course_notifications_helper->addCustomFieldOptions()) {
      \Drupal::state()->set('ilr_campaigns.custom_field_update', \Drupal::time()->getRequestTime());
    }
  }

  // Add Course Notification submissions to the email list.
  $course_notifications_helper->queueSubscribers();

  /** @var \Drupal\ilr_campaigns\BlogSubscriptionHelper $blog_subscription_helper */
  $blog_subscription_helper = \Drupal::service('ilr_campaigns.blog_subscriptions');
  $blog_subscription_helper->addSubscriberInterestOptions();

  // Queue the subscribers.
  $blog_subscription_helper->queueSubscribers('blog_updates');
}
