commit c7e5e3a4e96c55c6c8dd64553727601f4dcc0b71
Author: Jeff Amaral <jeffam@397127.no-reply.drupal.org>
Date:   Wed Jul 10 16:22:36 2024 -0400

    ILR Custom: Modify dblog to use custom db connection + misc fixes

diff --git a/core/modules/dblog/dblog.module b/core/modules/dblog/dblog.module
index ef11460c2c..82fc0ed5aa 100644
--- a/core/modules/dblog/dblog.module
+++ b/core/modules/dblog/dblog.module
@@ -69,7 +69,7 @@ function dblog_cron() {
   // Counting the most recent n rows avoids issues with wid number sequences,
   // e.g. auto_increment value > 1 or rows deleted directly from the table.
   if ($row_limit > 0) {
-    $connection = \Drupal::database();
+    $connection = \Drupal\Core\Database\Database::getConnection('default', 'sqlite_logs');
     $min_row = $connection->select('watchdog', 'w')
       ->fields('w', ['wid'])
       ->orderBy('wid', 'DESC')
@@ -92,7 +92,8 @@ function dblog_cron() {
  *   List of uniquely defined database log message types.
  */
 function _dblog_get_message_types() {
-  return \Drupal::database()->query('SELECT DISTINCT([type]) FROM {watchdog} ORDER BY [type]')
+  $connection = \Drupal\Core\Database\Database::getConnection('default', 'sqlite_logs');
+  return $connection->query('SELECT DISTINCT([type]) FROM {watchdog} ORDER BY [type]')
     ->fetchAllKeyed(0, 0);
 }
 
diff --git a/core/modules/dblog/src/Controller/DbLogController.php b/core/modules/dblog/src/Controller/DbLogController.php
index 134bc22580..d6b9483c3c 100644
--- a/core/modules/dblog/src/Controller/DbLogController.php
+++ b/core/modules/dblog/src/Controller/DbLogController.php
@@ -20,6 +20,7 @@
 use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\Link;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+use Symfony\Component\DependencyInjection\Attribute\Autowire;
 
 /**
  * Returns responses for dblog routes.
@@ -59,7 +60,13 @@ class DbLogController extends ControllerBase {
    * @param \Drupal\Core\Form\FormBuilderInterface $form_builder
    *   The form builder service.
    */
-  public function __construct(Connection $database, ModuleHandlerInterface $module_handler, DateFormatterInterface $date_formatter, FormBuilderInterface $form_builder) {
+  public function __construct(
+    #[Autowire(service: 'database.dblog')]
+    Connection $database,
+    ModuleHandlerInterface $module_handler,
+    DateFormatterInterface $date_formatter,
+    FormBuilderInterface $form_builder
+  ) {
     $this->database = $database;
     $this->moduleHandler = $module_handler;
     $this->dateFormatter = $date_formatter;
@@ -152,7 +159,6 @@ public function overview(Request $request) {
       'variables',
       'link',
     ]);
-    $query->leftJoin('users_field_data', 'ufd', '[w].[uid] = [ufd].[uid]');
 
     if (!empty($filter['where'])) {
       $query->where($filter['where'], $filter['args']);
@@ -227,7 +233,7 @@ public function overview(Request $request) {
    *   If no event found for the given ID.
    */
   public function eventDetails($event_id) {
-    $dblog = $this->database->query('SELECT [w].*, [u].[uid] FROM {watchdog} [w] LEFT JOIN {users} [u] ON [u].[uid] = [w].[uid] WHERE [w].[wid] = :id', [':id' => $event_id])->fetchObject();
+    $dblog = $this->database->query('SELECT [w].* FROM {watchdog} [w] WHERE [w].[wid] = :id', [':id' => $event_id])->fetchObject();
 
     if (empty($dblog)) {
       throw new NotFoundHttpException();
